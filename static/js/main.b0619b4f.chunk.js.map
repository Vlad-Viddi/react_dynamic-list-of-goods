{"version":3,"sources":["helpers/getGoods.ts","components/GoodsList.tsx","App.tsx","index.tsx"],"names":["getGoods","a","fetch","response","json","data","GoodsList","goods","map","id","color","name","key","style","App","state","loadingError","errorMessage","setGoods","setTimeout","setState","loadAllGoods","then","catch","loadRed","filter","good","load5","sort","b","localeCompare","slice","this","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4QASaA,EAAQ,uCAAG,8BAAAC,EAAA,sEACCC,MARP,yEAOM,cAChBC,EADgB,gBAEHA,EAASC,OAFN,cAEhBC,EAFgB,yBAIfA,GAJe,2CAAH,qDCFRC,EAAsC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpD,OACE,oCACE,4BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACT,wBAAIC,IAAKH,EAAII,MAAO,CAAEH,UAClBC,SCqDCG,E,4MAtDbC,MAAO,CACLR,MAAO,GACPS,cAAc,G,EAGhBC,aAAe,kD,EAEfC,SAAW,SAACX,GACVY,YAAW,kBAAM,EAAKC,SAAS,CAC7Bb,QACAS,cAAc,MACZ,M,EAGNK,aAAe,WACbrB,IACGsB,KAAK,EAAKJ,UACVK,OAAM,kBAAM,EAAKH,SAAS,CAAEJ,cAAc,Q,EAG/CQ,QAAU,WACRxB,IACGsB,MAAK,SAAAf,GAAK,OAAIA,EAAMkB,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKhB,YACxCY,KAAK,EAAKJ,UACVK,OAAM,kBAAM,EAAKH,SAAS,CAAEJ,cAAc,Q,EAG/CW,MAAQ,WACN3B,IACGsB,MAAK,SAAAf,GAAK,OAAIA,EAAMqB,MAAK,SAAC3B,EAAG4B,GAAJ,OAAU5B,EAAEU,KAAKmB,cAAcD,EAAElB,SAAOoB,MAAM,EAAG,MAC1ET,KAAK,EAAKJ,UACVK,OAAM,kBAAM,EAAKH,SAAS,CAAEJ,cAAc,Q,uDAI7C,OACE,oCACE,qDACCgB,KAAKjB,MAAMC,aACRgB,KAAKf,aAEL,oCACE,kBAAC,EAAD,CAAWV,MAAOyB,KAAKjB,MAAMR,QAC7B,4BAAQ0B,KAAK,SAASC,QAASF,KAAKX,cAApC,YACA,4BAAQY,KAAK,SAASC,QAASF,KAAKL,OAApC,UACA,4BAAQM,KAAK,SAASC,QAASF,KAAKR,SAApC,kB,GA9CIW,IAAMC,WCPxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.b0619b4f.chunk.js","sourcesContent":["import { Good } from '../components/TypeDefinitions';\n\nconst GOODS_URL = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\n// export const getGoods = (): Promise<Good[]> => {\n//   return fetch(GOODS_URL)\n//     .then(response => response.json());\n// };\n\nexport const getGoods = async (): Promise<Good[]> => {\n  const response = await fetch(GOODS_URL);\n  const data = await response.json();\n\n  return data;\n};\n","import React from 'react';\nimport { Good } from './TypeDefinitions';\n\ntype GoodsListProps = {\n  goods: Good[];\n};\n\nexport const GoodsList: React.FC<GoodsListProps> = ({ goods }) => {\n  return (\n    <>\n      <ul>\n        {goods.map(({ id, color, name }) => (\n          <li key={id} style={{ color }}>\n            { name }\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { getGoods } from './helpers/getGoods';\nimport { GoodsList } from './components/GoodsList';\nimport { Good } from './components/TypeDefinitions';\n\ntype AppState = {\n  goods: Good[];\n  loadingError: boolean;\n};\n\nclass App extends React.Component<{}, AppState> {\n  state ={\n    goods: [],\n    loadingError: false,\n  };\n\n  errorMessage = <p>Sorry, no data here</p>;\n\n  setGoods = (goods: Good[]) => {\n    setTimeout(() => this.setState({\n      goods,\n      loadingError: false,\n    }), 1000);\n  };\n\n  loadAllGoods = () => {\n    getGoods()\n      .then(this.setGoods)\n      .catch(() => this.setState({ loadingError: true }));\n  };\n\n  loadRed = () => {\n    getGoods()\n      .then(goods => goods.filter(good => good.color === 'red'))\n      .then(this.setGoods)\n      .catch(() => this.setState({ loadingError: true }));\n  };\n\n  load5 = () => {\n    getGoods()\n      .then(goods => goods.sort((a, b) => a.name.localeCompare(b.name)).slice(0, 5))\n      .then(this.setGoods)\n      .catch(() => this.setState({ loadingError: true }));\n  };\n\n  render() {\n    return (\n      <>\n        <h1>Dynamic list of Goods</h1>\n        {this.state.loadingError\n          ? this.errorMessage\n          : (\n            <>\n              <GoodsList goods={this.state.goods} />\n              <button type=\"button\" onClick={this.loadAllGoods}>Load all</button>\n              <button type=\"button\" onClick={this.load5}>Load 5</button>\n              <button type=\"button\" onClick={this.loadRed}>Load RED</button>\n            </>\n          )}\n      </>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}